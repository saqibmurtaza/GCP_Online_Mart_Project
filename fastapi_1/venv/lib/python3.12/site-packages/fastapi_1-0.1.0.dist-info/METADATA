Metadata-Version: 2.1
Name: fastapi_1
Version: 0.1.0
Summary: A FastAPI-based service for managing products, producing messages, and delivering web APIs.
Author: Saqib Murtaza
Author-email: saqibmurtazakhan@gmail.com
Requires-Python: >=3.12,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: aiokafka (>=0.10.0,<0.11.0)
Requires-Dist: dapr (>=1.13.0,<2.0.0)
Requires-Dist: fastapi (>=0.111.0,<0.112.0)
Requires-Dist: kafka (>=1.3.5,<2.0.0)
Requires-Dist: protobuf (>=5.27.1,<6.0.0)
Requires-Dist: psycopg[binary] (>=3.1.19,<4.0.0)
Requires-Dist: pydantic-settings (>=2.4.0,<3.0.0)
Requires-Dist: sqlmodel (>=0.0.19,<0.0.20)
Requires-Dist: uvicorn (>=0.30.1,<0.31.0)
Description-Content-Type: text/markdown

`model_dump`: This is the primary way of converting a Pydantic model to a dictionary¹. It takes the model instance and converts it into a dictionary where the keys are the field names and the values are the field values¹. Sub-models will be recursively converted to dictionaries¹.
 `json.dumps()`. These methods are useful for converting Pydantic models to more portable formats (like dictionaries or JSON strings) that can be easily stored, transmitted, or used with other parts of your code that expect standard Python data types¹. {These methods are useful for converting Pydantic models to more portable formats (like dictionaries or JSON strings) that can be easily stored, transmitted, or used with other parts of your code that expect standard Python data types.}
